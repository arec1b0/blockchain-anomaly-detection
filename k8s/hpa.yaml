apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: anomaly-detection-api-hpa
  namespace: blockchain-anomaly-detection
  labels:
    app: anomaly-detection
    component: api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: anomaly-detection-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  # CPU-based scaling
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

  # Memory-based scaling
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

  # Custom metrics (requires Prometheus Adapter)
  # - type: Pods
  #   pods:
  #     metric:
  #       name: http_requests_per_second
  #     target:
  #       type: AverageValue
  #       averageValue: "1000"

  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 minutes
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Min

    scaleUp:
      stabilizationWindowSeconds: 60   # 1 minute
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: anomaly-detection-consumer-hpa
  namespace: blockchain-anomaly-detection
  labels:
    app: anomaly-detection
    component: consumer
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: anomaly-detection-consumer
  minReplicas: 2
  maxReplicas: 8
  metrics:
  # CPU-based scaling
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75

  # Memory-based scaling
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85

  # Kafka lag-based scaling (requires custom metrics)
  # - type: External
  #   external:
  #     metric:
  #       name: kafka_consumer_lag
  #       selector:
  #         matchLabels:
  #           topic: blockchain-transactions
  #     target:
  #       type: AverageValue
  #       averageValue: "1000"

  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # 5 minutes - longer for consumers
      policies:
      - type: Pods
        value: 1
        periodSeconds: 120
      selectPolicy: Min

    scaleUp:
      stabilizationWindowSeconds: 60   # 1 minute
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 1
        periodSeconds: 60
      selectPolicy: Max

---
# VerticalPodAutoscaler (optional - requires VPA controller)
# Uncomment if you have VPA installed and want automatic resource recommendations
# apiVersion: autoscaling.k8s.io/v1
# kind: VerticalPodAutoscaler
# metadata:
#   name: anomaly-detection-api-vpa
#   namespace: blockchain-anomaly-detection
# spec:
#   targetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: anomaly-detection-api
#   updatePolicy:
#     updateMode: "Auto"  # or "Recreate" or "Initial" or "Off"
#   resourcePolicy:
#     containerPolicies:
#     - containerName: api
#       minAllowed:
#         cpu: 100m
#         memory: 256Mi
#       maxAllowed:
#         cpu: 2000m
#         memory: 4Gi

---
# PodDisruptionBudget for API
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: anomaly-detection-api-pdb
  namespace: blockchain-anomaly-detection
  labels:
    app: anomaly-detection
    component: api
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: anomaly-detection
      component: api

---
# PodDisruptionBudget for Consumer
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: anomaly-detection-consumer-pdb
  namespace: blockchain-anomaly-detection
  labels:
    app: anomaly-detection
    component: consumer
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: anomaly-detection
      component: consumer
